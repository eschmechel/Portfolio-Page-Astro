---
// src/pages/blog/index.astro
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { personalData } from '../../data/personalData';
import Socials from '../../data/socialData';
import { getSocialIcon } from '../../utils/socialIcons';

const pageTitle = `${personalData.meta.siteName}`;
const pageDescription = 'Insights about game development, programming, and technology from Elliott Schmechel.';

// Get all blog posts and sort by pinned status first, then by publication date (newest first)
const allPosts = await getCollection('blog');
const publishedPosts = allPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => {
    // First, sort by pinned status (pinned posts first)
    if (a.data.isPinned && !b.data.isPinned) return -1;
    if (!a.data.isPinned && b.data.isPinned) return 1;
    
    // Then sort by publication date (newest first)
    return b.data.pubDate.valueOf() - a.data.pubDate.valueOf();
  });

// Format date helper
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

// Get reading time estimate
const getReadingTime = (content: string) => {
  const wordsPerMinute = 200;
  const words = content.trim().split(/\s+/).length;
  const readingTime = Math.ceil(words / wordsPerMinute);
  return readingTime;
};
---

<BaseLayout title={`${pageTitle} | Elliott Schmechel`} description={pageDescription}>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16 lg:py-24">
    <!-- Header -->
    <div class="text-center mb-16">
      <h1 class="text-4xl md:text-5xl font-bold text-secondary-900 dark:text-white mb-6">
        Blog
      </h1>
      <p class="text-xl text-secondary-600 dark:text-secondary-400 max-w-2xl mx-auto">
        Insights about game development, programming, and technology. 
        Sharing my journey and lessons learned along the way.
      </p>
    </div>
    
    <!-- Blog Posts -->
    {publishedPosts.length === 0 ? (
      <div class="text-center py-12">
        <div class="mb-6">
          <svg class="w-16 h-16 text-secondary-400 dark:text-secondary-600 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
          </svg>
        </div>
        <h2 class="text-2xl font-semibold text-secondary-900 dark:text-white mb-4">
          Coming Soon
        </h2>
        <p class="text-secondary-600 dark:text-secondary-400 max-w-md mx-auto">
          I'm working on some exciting blog posts. Check back soon for insights on game development, 
          programming tutorials, and project showcases.
        </p>
      </div>
    ) : (
      <div class="space-y-12">
        {publishedPosts.map((post, index) => (
          <article class="group">
            <div class="bg-white dark:bg-secondary-800 rounded-xl border border-secondary-200 dark:border-secondary-700 overflow-hidden hover:shadow-lg hover:border-primary-300 dark:hover:border-primary-700 transition-all duration-300">
              {post.data.heroImage && (
                <div class="aspect-video md:aspect-[2/1] overflow-hidden">
                  <img 
                    src={post.data.heroImage} 
                    alt={post.data.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    loading={index < 2 ? "eager" : "lazy"}
                    width="800"
                    height="400"
                  />
                </div>
              )}
              
              <div class="p-8">
                <!-- Meta Info -->
                <div class="flex items-center gap-4 text-sm text-secondary-500 dark:text-secondary-400 mb-4">
                  {post.data.isPinned && (
                    <>
                      <span class="inline-flex items-center gap-1 px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full font-medium">
                        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
                        </svg>
                        Pinned
                      </span>
                      <span class="text-secondary-300 dark:text-secondary-600">•</span>
                    </>
                  )}
                  <time datetime={post.data.pubDate.toISOString()}>
                    {formatDate(post.data.pubDate)}
                  </time>
                  <span class="text-secondary-300 dark:text-secondary-600">•</span>
                  <span>{getReadingTime(post.body)} min read</span>
                  {post.data.updatedDate && (
                    <>
                      <span class="text-secondary-300 dark:text-secondary-600">•</span>
                      <span class="text-accent-600 dark:text-accent-400">Updated</span>
                    </>
                  )}
                </div>
                
                <!-- Title and Description -->
                <h2 class="text-2xl md:text-3xl font-bold text-secondary-900 dark:text-white mb-4 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                  <a href={`/blog/${post.slug}`} class="hover:underline">
                    {post.data.title}
                  </a>
                </h2>
                
                <p class="text-lg text-secondary-600 dark:text-secondary-400 mb-6 leading-relaxed">
                  {post.data.description}
                </p>
                
                <!-- Tags -->
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2 mb-6">
                    {post.data.tags.map(tag => (
                      <span class="px-3 py-1 text-sm font-medium bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full">
                        #{tag}
                      </span>
                    ))}
                  </div>
                )}
                
                <!-- Read More -->
                <div class="flex items-center justify-between">
                  <a
                    href={`/blog/${post.slug}`}
                    class="inline-flex items-center gap-2 text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium transition-colors"
                  >
                    Read full article
                    <svg class="w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
          </article>
        ))}
      </div>
    )}
    
    <!-- Newsletter/Subscribe Section -->
    <section class="mt-20">
      <div class="bg-gradient-to-r from-primary-50 to-accent-50 dark:from-primary-900/20 dark:to-accent-900/20 rounded-2xl p-8 md:p-12 text-center">
        <h2 class="text-2xl md:text-3xl font-bold text-secondary-900 dark:text-white mb-4">
          Stay Updated
        </h2>
        <p class="text-lg text-secondary-600 dark:text-secondary-400 mb-8 max-w-2xl mx-auto">
          Want to be notified when I publish new articles? Follow me on social media or 
          check back regularly for updates.
        </p>
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a
            href={Socials.find(s => s.platform.toLowerCase() === 'github')?.url}
            target="_blank"
            rel="noopener noreferrer"
            class="btn btn-secondary inline-flex items-center gap-2 px-6 py-3"
          >
            <span class="w-5 h-5" set:html={getSocialIcon('GitHub')} />
            Follow on GitHub
          </a>
          <a
            href={Socials.find(s => s.platform.toLowerCase() === 'linkedin')?.url}
            target="_blank"
            rel="noopener noreferrer"
            class="btn btn-secondary inline-flex items-center gap-2 px-6 py-3"
          >
            <span class="w-5 h-5" set:html={getSocialIcon('LinkedIn')} />
            Connect on LinkedIn
          </a>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>
